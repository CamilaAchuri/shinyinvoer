% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-buttonImage.R
\name{buttonImageInput}
\alias{buttonImageInput}
\title{Grouped buttons with image}
\usage{
buttonImageInput(
  inputId,
  labels = NULL,
  values = NULL,
  active = NULL,
  file = NULL,
  format = NULL,
  class = "buttonStyle",
  classImg = "imageStyle"
)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{labels}{List of images´ names saved in a folder into www.}

\item{values}{List of id inputs when pressing each button.}

\item{active}{Initial button selected.}

\item{file}{Folder where the images are stored.}

\item{class}{Name of the class which contains the button´s style}

\item{classImg}{class Name of the class which contains the images´ style.}
}
\value{
A group of buttons which can be controlled from the UI.
}
\description{
Create grouped buttons with image to choose a single button and get its id.
}
\examples{
\dontrun{
## Only run examples in interactive R sessions
if (interactive()) {

ui <- fluidPage(
    uiOutput('button'),
    verbatimTextOutput('input_button')
)
server <- function(input, output) {
 # you must crate a file in www for saving images (www/img/...)
 output$button <- renderUI({
                  buttonImageInput(inputId = 'chosen_button',
                  labels = c("cat", "dog", "fox"),
                  values = c("cat", "dog", "fox"),
                  active = 'dog',
                  file = "img/")
                  })
# print input id when clicking
output$input_button <- renderPrint({
                   input$chosen_button
                  })
}
shinyApp(ui, server)
}
}


}
